{"version":3,"sources":["components/Input.js","components/RoundList.js","components/GameStyle.js","components/StartButton.js","components/Card.js","pages/GameStart.js","pages/GameInstructions.js","GameLogicHelpers.js","components/Square.js","components/Board.js","pages/GamePlay.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","className","htmlFor","label","name","id","type","placeholder","maxLength","minLength","value","onChange","required","RoundList","size","GameStyle","selected","StartButton","handleAlert","bind","alert","this","maxR","player1","player2","style1","style2","onClick","children","to","React","Component","Card","style","GameStart","handleFormChange","handleStyle1Change","handleStyle2Change","event","onFormChange","onStyle1Change","target","onStyle2Change","maxRounds","player1name","player1style","player2name","player2style","onSubmit","handleSubmit","GameInstructions","calculateWinner","squares","lines","i","length","a","b","c","calculateOverallWinner","pointsX","pointsO","highestPoints","Math","max","Number","String","matchPlayerPoints","searchedStyle","allSquaresClicked","clicks","forEach","item","Square","Board","renderSquare","GamePlay","callBackendAPI","fetch","response","json","body","state","bodyResponse","lastPositionBodyResponse","status","Error","message","history","Array","fill","stepNumber","xIsNext","currentRound","handleResetClick","then","res","setState","catch","err","console","log","method","headers","JSON","stringify","data","error","onResetClick","slice","increaseCurrentRoundByOne","addPointToX","addPointToO","notXIsNext","addCleanFieldToHistory","concat","addCurrentFieldToHistory","overallWinner","current","winner","roundMessage","pointX","pointO","messagePointsX","messagePointsO","nextX","playerX","playerO","playerWinner","playerNext","handleClick","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b19f8c5d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n\r\n  return (\r\n    <div className=\"form__group\">\r\n      <label htmlFor=\"name\" className=\"form__label\">{props.label}</label>\r\n      <input\r\n        className=\"form__input\"\r\n        name={props.name}\r\n        id={props.id}\r\n        type={props.type}\r\n        label={props.label}\r\n        placeholder={props.placeholder}\r\n        maxLength={props.maxLength}\r\n        minLength={props.minLength}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        required=\"\"\r\n      />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './RoundList.css';\r\n\r\nconst RoundList = (props) => {\r\n  return (\r\n    <div className=\"selectdiv\">\r\n      <select name={props.name} id={props.id} size={props.size} value={props.value} onChange={props.onChange} label={props.label}>\r\n        <option value=\"Runden\">Runden</option>\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"7\">7</option>\r\n        <option value=\"8\">8</option>\r\n        <option value=\"9\">9</option>\r\n        <option value=\"10\">10</option>\r\n        <option value=\"11\">11</option>\r\n        <option value=\"12\">12</option>\r\n        <option value=\"13\">13</option>\r\n        <option value=\"14\">14</option>\r\n        <option value=\"15\">15</option>\r\n        <option value=\"16\">16</option>\r\n        <option value=\"17\">17</option>\r\n        <option value=\"18\">18</option>\r\n        <option value=\"19\">19</option>\r\n        <option value=\"20\">20</option>\r\n        <option value=\"21\">21</option>\r\n        <option value=\"22\">22</option>\r\n        <option value=\"23\">23</option>\r\n        <option value=\"24\">24</option>\r\n        <option value=\"25\">25</option>\r\n        <option value=\"26\">26</option>\r\n        <option value=\"27\">27</option>\r\n        <option value=\"28\">28</option>\r\n        <option value=\"29\">29</option>\r\n        <option value=\"30\">30</option>\r\n        <option value=\"31\">31</option>\r\n        <option value=\"32\">32</option>\r\n        <option value=\"33\">33</option>\r\n        <option value=\"34\">34</option>\r\n        <option value=\"35\">35</option>\r\n        <option value=\"36\">36</option>\r\n        <option value=\"37\">37</option>\r\n        <option value=\"38\">38</option>\r\n        <option value=\"39\">39</option>\r\n        <option value=\"40\">40</option>\r\n        <option value=\"41\">41</option>\r\n        <option value=\"42\">42</option>\r\n        <option value=\"43\">43</option>\r\n        <option value=\"44\">44</option>\r\n        <option value=\"45\">45</option>\r\n        <option value=\"46\">46</option>\r\n        <option value=\"47\">47</option>\r\n        <option value=\"48\">48</option>\r\n        <option value=\"49\">49</option>\r\n        <option value=\"50\">50</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundList;\r\n","import React from 'react';\r\n\r\nimport './GameStyle.css';\r\n\r\nconst GameStyle = (props) => {\r\n  return (\r\n    <div className=\"selectdiv\">\r\n      <label>\r\n        <select\r\n          name={props.name}\r\n          id={props.id}\r\n          placeholder={props.placeholder}\r\n          size={props.size}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        >\r\n          <option selected>Spielstyl</option>\r\n          <option value=\"X\">X</option>\r\n          <option value=\"O\">O</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameStyle;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './StartButton.css';\r\n\r\nclass StartButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAlert = this.handleAlert.bind(this);\r\n  }\r\n\r\n  handleAlert() {\r\n    alert('Daten sind nicht vollständig!');\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.maxR === '' ||\r\n      this.props.player1 === '' ||\r\n      this.props.player2 === '' ||\r\n      this.props.style1 === '' ||\r\n      this.props.style2 === ''\r\n    ) {\r\n      return (\r\n        <button className={this.props.className} onClick={this.handleAlert}>\r\n          {this.props.children}\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link to=\"/instructions\">\r\n          <button className={this.props.className} type=\"submit\">\r\n            {this.props.children}\r\n          </button>\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default StartButton;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './GameStart.css';\r\nimport Input from '../components/Input';\r\nimport RoundList from '../components/RoundList';\r\nimport GameStyle from '../components/GameStyle';\r\nimport StartButton from '../components/StartButton';\r\nimport Card from '../components/Card';\r\nimport '../components/Card.css';\r\n\r\nclass GameStart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleStyle1Change = this.handleStyle1Change.bind(this);\r\n    this.handleStyle2Change = this.handleStyle2Change.bind(this);\r\n  }\r\n\r\n  handleFormChange(event) {\r\n    this.props.onFormChange(event);\r\n  }\r\n\r\n  handleStyle1Change(event) {\r\n    this.props.onStyle1Change(event.target.value);\r\n  }\r\n\r\n  handleStyle2Change(event) {\r\n    this.props.onStyle2Change(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const maxRounds = this.props.maxRounds;\r\n    const player1name = this.props.player1name;\r\n    const player1style = this.props.player1style;\r\n    const player2name = this.props.player2name;\r\n    const player2style = this.props.player2style;\r\n\r\n    return (\r\n      <Card>\r\n        <div>\r\n          <div className=\"header-item\">\r\n            <h1>Tic Tac Toe</h1>\r\n          </div>\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <RoundList\r\n                name=\"maxRounds\"\r\n                size=\"1\"\r\n                value={maxRounds}\r\n                onChange={this.handleFormChange}\r\n              />\r\n\r\n              <Input\r\n                name=\"player1name\"\r\n                type=\"text\"\r\n                placeholder=\"Spieler 1\"\r\n                id=\"player1\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                value={player1name}\r\n                onChange={this.handleFormChange}\r\n              />\r\n\r\n              <GameStyle\r\n                name=\"player1style\"\r\n                label=\"Spieler 1 Style\"\r\n                id=\"player1style\"\r\n                placeholder=\"Styl 1\"\r\n                value={player1style}\r\n                onChange={this.handleStyle1Change}\r\n              />\r\n\r\n              <Input\r\n                className=\"container-item\"\r\n                name=\"player2name\"\r\n                type=\"text\"\r\n                placeholder=\"Spieler 2\"\r\n                id=\"player2\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                value={player2name}\r\n                onChange={this.handleFormChange}\r\n              />\r\n\r\n              <GameStyle\r\n                name=\"player2style\"\r\n                label=\"Spieler 2 Style\"\r\n                id=\"player2style\"\r\n                placeholder=\"Styl 2\"\r\n                value={player2style}\r\n                onChange={this.handleStyle2Change}\r\n              />\r\n\r\n              <StartButton \r\n              className=\"item-button\"\r\n              maxR={maxRounds}\r\n              player1={player1name}\r\n              player2={player2name}\r\n              style1={player1style}\r\n              style2={player2style}\r\n              >\r\n              Weiter\r\n              </StartButton>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameStart;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './GameInstructions.css';\r\nimport Card from '../components/Card';\r\n\r\nconst GameInstructions = (props) => {\r\n  return (\r\n    <Card>\r\n      <div>\r\n        <div className=\"header-item\">\r\n          <h1>Spielregeln</h1>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"instructions\">\r\n            Jeder Spieler hat einen Zug. Das Ziel ist es 3 gleiche Symbole (X oder O) in eine Reihe\r\n            oder eine Diagonale zu bekommen. Wer als erster gewinnt, hat einen Punkt. Wer nach allen\r\n            Runden die meisten Punkte hat, gewinnt. Viel Spaß beim Spiel!{' '}\r\n          </div>\r\n          <Link to=\"/play\">\r\n            <button className=\"item-button\">Weiter</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GameInstructions;\r\n","//@ts-check\r\nexport function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function calculateOverallWinner(\r\n  pointsX,\r\n  pointsO,\r\n  player1,\r\n  player2,\r\n  style1,\r\n  style2,\r\n) {\r\n  const highestPoints = Math.max(Number(pointsX), Number(pointsO));\r\n  //let winnerToExpectedStyleX = String(style1 === 'X' ? player1 : player2);\r\n  //Slet winnerToExpectedStyleO = String(style1 === 'O' ? player2 : player1);\r\n  if (highestPoints > 0 && highestPoints === pointsX && highestPoints !== pointsO) {\r\n    return String(style1 === 'X' ? player1 : player2) + \" ist der Gewinner!\";\r\n  } else if (highestPoints > 0 && highestPoints === pointsO && highestPoints !== pointsX) {\r\n    return String(style1 === 'O' ? player2 : player1) + \" ist der Gewinner!\";\r\n  } else {\r\n    return \"Gleichstand!\";\r\n  }\r\n}\r\n\r\nexport function matchPlayerPoints(\r\n  searchedStyle,\r\n  player1,\r\n  player2,\r\n  style1,\r\n  style2,\r\n) {\r\n  if (searchedStyle === style1) {\r\n    return player1 + '(' + style1 + ')';\r\n  } else if (searchedStyle === style2) {\r\n    return player2 + '(' + style2 + ')';\r\n  }\r\n}\r\n\r\nexport function allSquaresClicked(squares) {\r\n  let clicks = 0;\r\n\r\n  squares.forEach(function (item) {\r\n    if (item !== null) {\r\n      clicks = clicks + 1;\r\n    }\r\n  });\r\n\r\n  if (clicks === 9) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport './Square.css';\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nimport './Board.css';\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-container\">\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './GamePlay.css';\r\nimport Card from '../components/Card';\r\nimport {\r\n  calculateWinner,\r\n  calculateOverallWinner,\r\n  matchPlayerPoints,\r\n  allSquaresClicked,\r\n} from '../GameLogicHelpers';\r\nimport Board from '../components/Board';\r\n\r\nclass GamePlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      currentRound: 1,\r\n      pointsX: 0,\r\n      pointsO: 0,\r\n      maxRounds: this.props.maxRounds,\r\n      player1: this.props.player1,\r\n      player2: this.props.player2,\r\n      style1: this.props.style1,\r\n      style2: this.props.style2,\r\n    };\r\n    this.handleResetClick = this.handleResetClick.bind(this);\r\n  }\r\n\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('http://localhost:5000/getCurrentState');\r\n    const body = await response.json();\r\n    const bodyResponse = await body.state;\r\n    const lastPositionBodyResponse = await bodyResponse[bodyResponse.length - 1];\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return lastPositionBodyResponse;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then((res) =>\r\n        this.setState({\r\n          history: res.history,\r\n          stepNumber: res.stepNumber,\r\n          xIsNext: res.xIsNext,\r\n          currentRound: res.currentRound,\r\n          pointsX: res.pointsX,\r\n          pointsO: res.pointsO,\r\n          maxRounds: res.maxRounds,\r\n          player1: res.player1,\r\n          player2: res.player2,\r\n          style1: res.style1,\r\n          style2: res.style2,\r\n        }),\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    fetch('http://localhost:5000/updateState', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('Success:', data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  handleResetClick() {\r\n    this.props.onResetClick();\r\n    fetch('http://localhost:5000/deleteState', {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const maxRounds = this.state.maxRounds;\r\n    const currentRound = this.state.currentRound;\r\n    const increaseCurrentRoundByOne = currentRound + 1;\r\n    const pointsX = this.state.pointsX;\r\n    const pointsO = this.state.pointsO;\r\n    const addPointToX = pointsX + 1;\r\n    const addPointToO = pointsO + 1;\r\n    const valueX = 'X';\r\n    const valueO = 'O';\r\n    const xIsNext = this.state.xIsNext;\r\n    const notXIsNext = !this.state.xIsNext;\r\n\r\n    const addCleanFieldToHistory = history.concat([\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ]);\r\n\r\n    const addCurrentFieldToHistory = history.concat([\r\n      {\r\n        squares: squares,\r\n      },\r\n    ]);\r\n\r\n    if (squares[i] && !calculateWinner(squares) && !allSquaresClicked(squares)) {\r\n      return;\r\n    }\r\n\r\n    if (calculateWinner(squares) === valueX && maxRounds > currentRound) {\r\n      return this.setState({\r\n        history: addCleanFieldToHistory,\r\n        stepNumber: history.length,\r\n        xIsNext: xIsNext,\r\n        currentRound: increaseCurrentRoundByOne,\r\n        pointsX: addPointToX,\r\n      });\r\n    }\r\n\r\n    if (calculateWinner(squares) === valueO && maxRounds > currentRound) {\r\n      return this.setState({\r\n        history: addCleanFieldToHistory,\r\n        stepNumber: history.length,\r\n        xIsNext: xIsNext,\r\n        currentRound: increaseCurrentRoundByOne,\r\n        pointsO: addPointToO,\r\n      });\r\n    }\r\n\r\n    if (!calculateWinner(squares) && allSquaresClicked(squares) && maxRounds > currentRound) {\r\n      return this.setState({\r\n        history: addCleanFieldToHistory,\r\n        stepNumber: history.length,\r\n        xIsNext: xIsNext,\r\n        currentRound: increaseCurrentRoundByOne,\r\n      });\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? valueX : valueO;\r\n    this.setState({\r\n      history: addCurrentFieldToHistory,\r\n      stepNumber: history.length,\r\n      xIsNext: notXIsNext,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const maxRounds = Number(this.state.maxRounds);\r\n    const currentRound = Number(this.state.currentRound);\r\n    const history = this.state.history;\r\n    const stepNumber = this.state.stepNumber;\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const roundMessage = 'Runde ' + this.state.currentRound + ' von ' + maxRounds;\r\n    const pointX = this.state.pointsX;\r\n    const pointO = this.state.pointsO;\r\n    const messagePointsX = pointX === 1 ? pointX + ' Punkt' : pointX + ' Punkte';\r\n    const messagePointsO = pointO === 1 ? pointO + ' Punkt' : pointO + ' Punkte';\r\n    const player1 = String(this.state.player1);\r\n    const player2 = String(this.state.player2);\r\n    const style1 = String(this.state.style1);\r\n    const style2 = String(this.state.style2);\r\n    let nextX = this.state.xIsNext ? 'X' : 'O';\r\n    const playerX = matchPlayerPoints('X', player1, player2, style1, style2);\r\n    const playerO = matchPlayerPoints('O', player1, player2, style1, style2);\r\n    const playerWinner = matchPlayerPoints(winner, player1, player2, style1, style2);\r\n    const playerNext = matchPlayerPoints(nextX, player1, player2, style1, style2);\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Gewinner der Runde: ' + playerWinner;\r\n    } else {\r\n      status =\r\n        'Nächster Spieler: ' +\r\n        playerNext;\r\n    }\r\n\r\n    let overallWinner;\r\n\r\n    if (winner && maxRounds === currentRound) {\r\n      if (winner === 'X') {\r\n        overallWinner = calculateOverallWinner(\r\n          pointX + 1,\r\n          pointO,\r\n          player1,\r\n          player2,\r\n          style1,\r\n          style2,\r\n        );\r\n      } else if (winner === 'O') {\r\n        overallWinner = calculateOverallWinner(\r\n          pointX,\r\n          pointO + 1,\r\n          player1,\r\n          player2,\r\n          style1,\r\n          style2,\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Card>\r\n          <div>\r\n            <div className=\"header-item\">\r\n              <h1 className=\"card-name\">Spielergebnisse</h1>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"winner-message\">{overallWinner}</div>\r\n              <Link to=\"/\">\r\n                <button className=\"item-button\" onClick={this.handleResetClick}>\r\n                  Erneut spielen\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      );\r\n    } else if (\r\n      winner === null &&\r\n      maxRounds === currentRound &&\r\n      allSquaresClicked(current.squares)\r\n    ) {\r\n      overallWinner = calculateOverallWinner(pointX, pointO, player1, player2, style1, style2);\r\n\r\n      return (\r\n        <Card>\r\n          <div>\r\n            <div className=\"header-item\">\r\n              <h1 className=\"card-name\">Spielergebnisse</h1>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"winner-message\">{overallWinner}</div>\r\n              <Link to=\"/\">\r\n                <button className=\"item-button\" onClick={this.handleResetClick}>\r\n                  Erneut spielen\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <div className=\"header-item\">\r\n          <h1 className=\"card-name\">Spiel</h1>\r\n        </div>\r\n        <div className=\"game-container\">\r\n          <div className=\"game-info\">\r\n            <div className=\"game-item_1\">{roundMessage}</div>\r\n\r\n            <div className=\"game-item_2\">\r\n              <div>{playerX}</div>\r\n              <div>{messagePointsX}</div>\r\n            </div>\r\n            <div className=\"game-item_3\">\r\n              <div>{playerO}</div>\r\n              <div>{messagePointsO}</div>\r\n            </div>\r\n\r\n            <div className=\"game-item_4\">{status}</div>\r\n          </div>\r\n          <div className=\"game-board\">\r\n            <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePlay;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport GameStart from './pages/GameStart';\r\nimport GameInstructions from './pages/GameInstructions';\r\nimport GamePlay from './pages/GamePlay';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      maxRounds: '',\r\n      player1name: '',\r\n      player1style: '',\r\n      player2name: '',\r\n      player2style: '',\r\n      overallWinner: '',\r\n    };\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleStyle1Change = this.handleStyle1Change.bind(this);\r\n    this.handleStyle2Change = this.handleStyle2Change.bind(this);\r\n    this.handleResetClick = this.handleResetClick.bind(this);\r\n  }\r\n\r\n  handleResetClick() {\r\n    this.setState({\r\n      maxRounds: '',\r\n      player1name: '',\r\n      player1style: '',\r\n      player2name: '',\r\n      player2style: '',\r\n    });\r\n  }\r\n\r\n  handleFormChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleStyle1Change(player1style) {\r\n    if (player1style === 'X') {\r\n      this.setState({\r\n        player1style,\r\n        player2style: 'O',\r\n      });\r\n    } else if (player1style === 'O') {\r\n      this.setState({\r\n        player1style,\r\n        player2style: 'X',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleStyle2Change(player2style) {\r\n    if (player2style === 'X') {\r\n      this.setState({\r\n        player2style,\r\n        player1style: 'O',\r\n      });\r\n    } else if (player2style === 'O') {\r\n      this.setState({\r\n        player2style,\r\n        player1style: 'X',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const maxRounds = this.state.maxRounds;\r\n    const player1name = this.state.player1name;\r\n    const player1style = this.state.player1style;\r\n    const player2name = this.state.player2name;\r\n    const player2style = this.state.player2style;\r\n    \r\n\r\n    return (\r\n      <Router>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n                <GameStart\r\n                  maxRounds={maxRounds}\r\n                  player1name={player1name}\r\n                  player1style={player1style}\r\n                  player2name={player2name}\r\n                  player2style={player2style}\r\n                  onFormChange={this.handleFormChange}\r\n                  onStyle1Change={this.handleStyle1Change}\r\n                  onStyle2Change={this.handleStyle2Change}\r\n                />\r\n            </Route>\r\n\r\n            <Route path=\"/instructions\" exact>\r\n              <GameInstructions />\r\n            </Route>\r\n\r\n            <Route path=\"/play\" exact>\r\n              <GamePlay\r\n                maxRounds={this.state.maxRounds}\r\n                player1={this.state.player1name}\r\n                player2={this.state.player2name}\r\n                style1={this.state.player1style}\r\n                style2={this.state.player2style}\r\n                onResetClick={this.handleResetClick}\r\n              />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}